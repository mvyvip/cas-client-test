<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	<display-name>Authority Web Porject</display-name>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>/assets/welcome.html</welcome-file>
	</welcome-file-list>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:configs/applicationContext*.xml,
			classpath:/ssoconfigs/*.xml,
			classpath*:/META-INF/spring/*.xml
		</param-value>
	</context-param>
	<!-- 防止发生java.beans.Introspector内存泄露,应将它配置在ContextLoaderListener的前面 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<filter>
		<filter-name>httpPutFormFilter</filter-name>
		<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>httpPutFormFilter</filter-name>
		<servlet-name>authority</servlet-name>
	</filter-mapping>

	<!-- cros config -->
	<filter>
		<filter-name>authorityCorsFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>authorityCorsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- encrypt config start -->
	<filter>
		<filter-name>encryptFilter</filter-name>
		<filter-class>com.wangxiaobao.authority.web.filter.EncryptFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>encryptFilter</filter-name>
		<url-pattern>/api/*</url-pattern>
	</filter-mapping>
	<!-- encrypt config end -->

	<!-- 该类在filter.xml中已经被初始化，所以采用delegating代理 -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>CAS Client Info Logging Filter</filter-name>
		<filter-class>org.jasig.inspektr.common.web.ClientInfoThreadLocalFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS Client Info Logging Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>requestParameterSecurityFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>requestParameterSecurityFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>

	<!-- openSessionInView配置 -->
	<filter>
		<filter-name>openSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>openSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>authority</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
			classpath:/configs/springmvc.xml,
			classpath:/configs/cas-mvc-config.xml
			</param-value>
		</init-param>
		<init-param>
			<param-name>throwExceptionIfNoHandlerFound</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
		<init-param>
			<param-name>resetEnable</param-name>
			<param-value>true</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>
	<!-- <servlet> -->
	<!-- <servlet-name>kaptcha</servlet-name> -->
	<!-- <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class> -->
	<!-- </servlet> -->
	<!-- <servlet-mapping> -->
	<!-- <servlet-name>kaptcha</servlet-name> -->
	<!-- <url-pattern>/images/kaptcha.jpg</url-pattern> -->
	<!-- </servlet-mapping> -->
	<servlet>
		<servlet-name>metrics-health</servlet-name>
		<servlet-class>com.codahale.metrics.servlets.HealthCheckServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>metrics</servlet-name>
		<servlet-class>com.codahale.metrics.servlets.MetricsServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>metrics-ping</servlet-name>
		<servlet-class>com.codahale.metrics.servlets.PingServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>metrics-threads</servlet-name>
		<servlet-class>com.codahale.metrics.servlets.ThreadDumpServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/login</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/logout</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/validate</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/serviceValidate</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/p3/serviceValidate</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/proxy</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/proxyValidate</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/p3/proxyValidate</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/CentralAuthenticationService</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/status</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/statistics</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/statistics/ssosessions</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/status/config</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>metrics-ping</servlet-name>
		<url-pattern>/statistics/ping</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>metrics</servlet-name>
		<url-pattern>/statistics/metrics</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>metrics-threads</servlet-name>
		<url-pattern>/statistics/threads</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>metrics-health</servlet-name>
		<url-pattern>/statistics/healthcheck</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/authorizationFailure.html</url-pattern>
	</servlet-mapping>
	<!-- REST support if cas-server-support-rest is included -->
	<servlet-mapping>
		<servlet-name>authority</servlet-name>
		<url-pattern>/v1/*</url-pattern>
	</servlet-mapping>

	<!-- <servlet-mapping> <servlet-name>cas</servlet-name> <url-pattern>/samlValidate</url-pattern> 
		</servlet-mapping> -->



 	<!-- session to redis -->
    <filter>
        <filter-name>springSessionRepositoryFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSessionRepositoryFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


	<session-config>
		<!-- Default to 5 minute session timeouts -->
		<session-timeout>5</session-timeout>
	</session-config>

	<error-page>
		<error-code>401</error-code>
		<location>/authorizationFailure.html</location>
	</error-page>

	<error-page>
		<error-code>403</error-code>
		<location>/authorizationFailure.html</location>
	</error-page>

	<error-page>
		<error-code>404</error-code>
		<location>/</location>
	</error-page>

	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/view/jsp/errors.jsp</location>
	</error-page>

	<error-page>
		<error-code>501</error-code>
		<location>/WEB-INF/view/jsp/errors.jsp</location>
	</error-page>

	<error-page>
		<error-code>503</error-code>
		<location>/WEB-INF/view/jsp/errors.jsp</location>
	</error-page>
</web-app>